{"version":3,"sources":["meteor://ðŸ’»app/imports/ui/App.js","meteor://ðŸ’»app/imports/ui/Login.js","meteor://ðŸ’»app/imports/ui/Task.js","meteor://ðŸ’»app/imports/db/TasksCollection.js","meteor://ðŸ’»app/client/main.js"],"names":["HIDE_COMPLETED_STRING","getUser","Meteor","isUserLogged","getTasksFilter","user","hideCompletedFilter","isChecked","$ne","userFilter","userId","_id","pendingOnlyFilter","Template","tasks","instance","hideCompleted","sort","createdAt","incompleteCount","incompleteTasksCount","TasksCollection","event","target","text","toastr","currentHideCompleted","username","password","err","Mongo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA,MAAuB,KAAvB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,YAAuB,eAAvB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AASA,MAAMA,qBAAqB,GAA3B;;AAEA,MAAMC,OAAO,GAAG,MAAMC,MAAM,CAA5B,IAAsBA,EAAtB;;AACA,MAAMC,YAAY,GAAG,MAAM,CAAC,CAACF,OAA7B;;AAEA,MAAMG,cAAc,GAAG,MAAM;AAC3B,QAAMC,IAAI,GAAGJ,OAAb;AAEA,QAAMK,mBAAmB,GAAG;AAAEC,aAAS,EAAE;AAAEC,SAAG,EAAE;AAAP;AAAb,GAA5B;AAEA,QAAMC,UAAU,GAAGJ,IAAI,GAAG;AAAEK,UAAM,EAAEL,IAAI,CAACM;AAAf,GAAH,GAAvB;;AAEA,QAAMC,iBAAiB,mCAAG,mBAAH,GAAgCH,UAAhC,CAAvB;;AAEA,SAAO;AAAA;AAAcG;AAAd,GAAP;AATF;;AAYAC,QAAQ,CAARA,wBAAiC,kCAAkC;AACjE,eAAa,IAAb,YAAa,EAAb;AADFA;AAIAA,QAAQ,CAARA,eAAwB,kCAAkC;AACxD,eAAa,IAAb,YAAa,EAAb;AADFA;AAIAA,QAAQ,CAARA,qBAA8B;AAC5B,kBAAgB;AACdX,UAAM,CAANA;AACD;;AAH2B,CAA9BW;AAMAA,QAAQ,CAARA,sBAA+B;AAC7BC,OAAK,GAAG;AACN,UAAMC,QAAQ,GAAGF,QAAQ,CAAzB,QAAiBA,EAAjB;AACA,UAAMG,aAAa,GAAGD,QAAQ,CAARA,UAAtB,qBAAsBA,CAAtB;AAEA,UAAM;AAAA;AAAqBN;AAArB,QAAoCL,cAA1C;;AAEA,QAAI,CAACD,YAAL,IAAqB;AACnB;AACD;;AACD,WAAO,eAAe,CAAf,KACLa,aAAa,uBADR,YAEL;AACEC,UAAI,EAAE;AAAEC,iBAAS,EAAE,CAAC;AAAd;AADR,KAFK,EAAP,KAAO,EAAP;AAV2B;;AAiB7BC,iBAAe,GAAG;AAChB,QAAI,CAAChB,YAAL,IAAqB;AACnB;AACD;;AAED,UAAM;AAAES;AAAF,QAAwBR,cAA9B;AAEA,UAAMgB,oBAAoB,GACxBC,eAAe,CAAfA,wBADF,KACEA,EADF;AAEA,WAAOD,oBAAoB,2CAA3B;AA1B2B;;AA4B7BJ,eAAa,GAAG;AACd,WAAOH,QAAQ,CAARA,qBAAP,qBAAOA,CAAP;AA7B2B;;AA+B7BV,cAAY,GAAG;AACb,WAAOA,YAAP;AAhC2B;;AAkC7BF,SAAO,GAAG;AACR,WAAOA,OAAP;AACD;;AApC4B,CAA/BY;AAuCAA,QAAQ,CAARA,YAAqB;AACnB,6BAA2B;AACzB;AACAS,SAAK,CAFoB,cAEzBA,GAFyB,CAIzB;;AACA,UAAM;AAAEC;AAAF,QAAN;AACA,UAAMC,IAAI,GAAGD,MAAM,CAANA,KANY,KAMzB,CANyB,CAQzB;;AACA,QAAIC,IAAI,IAAR,IAAgB;AACdtB,YAAM,CAANA,2BAAkC,cAAc;AAC9C,iBAAS;AACPuB,gBAAM,CAANA;AADF,eAEO;AACLA,gBAAM,CAANA;AACD;AALHvB;AAVuB,MAmBzB;;;AACAqB,UAAM,CAANA;AArBiB;;AAuBnB,kDAAgD;AAC9C,UAAMG,oBAAoB,GAAGX,QAAQ,CAARA,UAA7B,qBAA6BA,CAA7B;AACAA,YAAQ,CAARA,iCAA0C,CAA1CA;AACD;;AA1BkB,CAArBF;AA6BAA,QAAQ,CAARA,aAAsB;AACpBG,eAAa,GAAG;AACd,WAAOH,QAAQ,CAARA,qBAAP,qBAAOA,CAAP;AACD;;AAHmB,CAAtBA,E;;;;;;;;;;;AC5GA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAKAA,QAAQ,CAARA,aAAsB;AACpB,8BAA4B;AAC1BS,SAAK,CAALA;AAEA,UAAM;AAAEC;AAAF,QAAN;AAEA,UAAMI,QAAQ,GAAGJ,MAAM,CAANA,SAAjB;AACA,UAAMK,QAAQ,GAAGL,MAAM,CAANA,SAAjB;AACArB,UAAM,CAANA,sCAA8C2B,GAAD,IAAS;AACpD,eAAS;AACPJ,cAAM,CAANA;AACD;AAHHvB;AAKD;;AAbmB,CAAtBW,E;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAMAA,QAAQ,CAARA,YAAqB;AACnB,4BAA0B;AACxBX,UAAM,CAANA,2BAAkC,KAAlCA,KAA4C,CAAC,KAA7CA;AAFiB;;AAInB,oBAAkB;AAChBA,UAAM,CAANA,qBAA4B,KAA5BA,KAAsC,cAAc;AAClD,eAAS;AACPuB,cAAM,CAANA;AADF,aAEO;AACLA,cAAM,CAANA;AACD;AALHvB;AAOD;;AAZkB,CAArBW,E;;;;;;;;;;;ACNA;AAAA,iBAAsB,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEO,MAAMQ,eAAe,GAAG,IAAIS,KAAK,CAAT,WAAxB,OAAwB,CAAxB,C;;;;;;;;;;;ACFP,OAAO,IAAP;AAAA,2C","file":"/app.js","sourcesContent":["import { Meteor } from \"meteor/meteor\";\r\nimport { Template } from \"meteor/templating\";\r\nimport { TasksCollection } from \"../db/TasksCollection\";\r\nimport { ReactiveDict } from \"meteor/reactive-dict\";\r\nimport toastr from \"toastr\";\r\nimport \"./App.html\";\r\nimport \"./Task.js\";\r\nimport \"./Login.js\";\r\n\r\nconst HIDE_COMPLETED_STRING = \"hideCompleted\";\r\n\r\nconst getUser = () => Meteor.user();\r\nconst isUserLogged = () => !!getUser();\r\n\r\nconst getTasksFilter = () => {\r\n  const user = getUser();\r\n\r\n  const hideCompletedFilter = { isChecked: { $ne: true } };\r\n\r\n  const userFilter = user ? { userId: user._id } : {};\r\n\r\n  const pendingOnlyFilter = { ...hideCompletedFilter, ...userFilter };\r\n\r\n  return { userFilter, pendingOnlyFilter };\r\n};\r\n\r\nTemplate.mainContainer.onCreated(function mainContainerOnCreated() {\r\n  this.state = new ReactiveDict();\r\n});\r\n\r\nTemplate.form.onCreated(function mainContainerOnCreated() {\r\n  this.state = new ReactiveDict();\r\n});\r\n\r\nTemplate.mainContainer.events({\r\n  \"click .user\"() {\r\n    Meteor.logout();\r\n  },\r\n});\r\n\r\nTemplate.mainContainer.helpers({\r\n  tasks() {\r\n    const instance = Template.instance();\r\n    const hideCompleted = instance.state.get(HIDE_COMPLETED_STRING);\r\n\r\n    const { pendingOnlyFilter, userFilter } = getTasksFilter();\r\n\r\n    if (!isUserLogged()) {\r\n      return [];\r\n    }\r\n    return TasksCollection.find(\r\n      hideCompleted ? pendingOnlyFilter : userFilter,\r\n      {\r\n        sort: { createdAt: -1 },\r\n      }\r\n    ).fetch();\r\n  },\r\n  incompleteCount() {\r\n    if (!isUserLogged()) {\r\n      return \"\";\r\n    }\r\n\r\n    const { pendingOnlyFilter } = getTasksFilter();\r\n\r\n    const incompleteTasksCount =\r\n      TasksCollection.find(pendingOnlyFilter).count();\r\n    return incompleteTasksCount ? `(${incompleteTasksCount})` : \"\";\r\n  },\r\n  hideCompleted() {\r\n    return Template.instance().state.get(HIDE_COMPLETED_STRING);\r\n  },\r\n  isUserLogged() {\r\n    return isUserLogged();\r\n  },\r\n  getUser() {\r\n    return getUser();\r\n  },\r\n});\r\n\r\nTemplate.form.events({\r\n  \"submit .task-form\"(event) {\r\n    // Prevent default browser form submit\r\n    event.preventDefault();\r\n\r\n    // Get value from form element\r\n    const { target } = event;\r\n    const text = target.text.value;\r\n\r\n    // Insert a task into the collection\r\n    if (text != \"\") {\r\n      Meteor.call(\"tasks.insert\", text, (err, res) => {\r\n        if (err) {\r\n          toastr.error(\"Add task error\");\r\n        } else {\r\n          toastr.success(\"Task added successfully\");\r\n        }\r\n      });\r\n    }\r\n\r\n    // Clear form\r\n    target.text.value = \"\";\r\n  },\r\n  \"click #hide-completed-button\"(event, instance) {\r\n    const currentHideCompleted = instance.state.get(HIDE_COMPLETED_STRING);\r\n    instance.state.set(HIDE_COMPLETED_STRING, !currentHideCompleted);\r\n  },\r\n});\r\n\r\nTemplate.form.helpers({\r\n  hideCompleted() {\r\n    return Template.instance().state.get(HIDE_COMPLETED_STRING);\r\n  },\r\n});\r\n","import { Meteor } from \"meteor/meteor\";\r\nimport { Template } from \"meteor/templating\";\r\nimport toastr from \"toastr\";\r\nimport \"./Login.html\";\r\n\r\nTemplate.login.events({\r\n  \"submit .login-form\"(event) {\r\n    event.preventDefault();\r\n\r\n    const { target } = event;\r\n\r\n    const username = target.username.value;\r\n    const password = target.password.value;\r\n    Meteor.loginWithPassword(username, password, (err) => {\r\n      if (err) {\r\n        toastr.error(\"Login error\");\r\n      }\r\n    });\r\n  },\r\n});\r\n","import { Meteor } from \"meteor/meteor\";\r\nimport { Template } from \"meteor/templating\";\r\nimport toastr from \"toastr\";\r\n\r\nimport \"./Task.html\";\r\n\r\nTemplate.task.events({\r\n  \"click .toggle-checked\"() {\r\n    Meteor.call(\"tasks.setIsChecked\", this._id, !this.isChecked);\r\n  },\r\n  \"click .delete\"() {\r\n    Meteor.call(\"tasks.remove\", this._id, (err, res) => {\r\n      if (err) {\r\n        toastr.error(\"Remove task error\");\r\n      } else {\r\n        toastr.success(\"Task removed successfully\");\r\n      }\r\n    });\r\n  },\r\n});\r\n","import { Mongo } from \"meteor/mongo\";\r\n\r\nexport const TasksCollection = new Mongo.Collection(\"tasks\");\r\n","import \"../imports/ui/App.js\";\nimport \"toastr/build/toastr.min.css\";\n"]}