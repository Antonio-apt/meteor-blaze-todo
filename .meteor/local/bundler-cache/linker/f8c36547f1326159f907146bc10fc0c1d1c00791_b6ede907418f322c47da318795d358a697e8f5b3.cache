[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDevErrorOverlay = Package['dev-error-overlay'].DevErrorOverlay;\nReactiveDict = Package['reactive-dict'].ReactiveDict;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package.modules.meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\nSymbol = Package['ecmascript-runtime-client'].Symbol;\nMap = Package['ecmascript-runtime-client'].Map;\nSet = Package['ecmascript-runtime-client'].Set;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"ui\":{\"App.html\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/ui/App.html                                                                                       //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nmodule.link(\"./template.App.js\", { \"*\": \"*+\" });\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.App.js\":function module(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/ui/template.App.js                                                                                //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\n\nTemplate.body.addContent((function() {\n  var view = this;\n  return Spacebars.include(view.lookupTemplate(\"mainContainer\"));\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"mainContainer\");\nTemplate[\"mainContainer\"] = new Template(\"Template.mainContainer\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"app\"\n  }, \"\\n        \", HTML.HEADER(\"\\n            \", HTML.DIV({\n    class: \"app-bar\"\n  }, \"\\n                \", HTML.DIV({\n    class: \"app-header\"\n  }, \"\\n                    \", HTML.H1(\"üìùÔ∏è To Do List \", Blaze.View(\"lookup:incompleteCount\", function() {\n    return Spacebars.mustache(view.lookup(\"incompleteCount\"));\n  })), \"\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n\\n        \", HTML.DIV({\n    class: \"main\"\n  }, \"\\n            \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isUserLogged\"));\n  }, function() {\n    return [ \"\\n            \", HTML.DIV({\n      class: \"user\"\n    }, \"\\n                Hello, \", Blaze.View(\"lookup:getUser.username\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"getUser\"), \"username\"));\n    }), HTML.Raw(' <span class=\"logout\" title=\"Sair\">üö™</span>\\n            ')), \"\\n            \", Spacebars.include(view.lookupTemplate(\"form\")), \"\\n\\n            \", HTML.UL({\n      class: \"tasks\"\n    }, \"\\n                \", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"tasks\"));\n    }, function() {\n      return [ \"\\n                \", Spacebars.include(view.lookupTemplate(\"task\")), \"\\n                \" ];\n    }), \"\\n            \"), \"\\n            \" ];\n  }, function() {\n    return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"login\")), \"\\n            \" ];\n  }), \"\\n        \"), \"\\n    \");\n}));\n\nTemplate.__checkName(\"form\");\nTemplate[\"form\"] = new Template(\"Template.form\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"task-actions-container\"\n  }, HTML.Raw('\\n        <form class=\"task-form\">\\n            <input class=\"input\" type=\"text\" name=\"text\" placeholder=\"Type to add new tasks\">\\n            <button class=\"btn\" type=\"submit\">Add Task</button>\\n        </form>\\n        '), HTML.DIV({\n    class: \"filter\"\n  }, \"\\n            \", HTML.BUTTON({\n    class: \"btn\",\n    id: \"hide-completed-button\"\n  }, \"\\n                \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"hideCompleted\"));\n  }, function() {\n    return \"\\n                Show All\\n                \";\n  }, function() {\n    return \"\\n                Hide Completed\\n                \";\n  }), \"\\n            \"), \"\\n        \"), \"\\n    \");\n}));\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Login.html\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/ui/Login.html                                                                                     //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nmodule.link(\"./template.Login.js\", { \"*\": \"*+\" });\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.Login.js\":function module(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/ui/template.Login.js                                                                              //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\n\nTemplate.__checkName(\"login\");\nTemplate[\"login\"] = new Template(\"Template.login\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"login-container\">\\n        <form class=\"login-form\">\\n            <div class=\"login-line\">\\n                <label class=\"input-label\" htmlfor=\"username\">Username</label>\\n                <input class=\"input login-input\" type=\"text\" placeholder=\"Username\" name=\"username\" required=\"\">\\n            </div>\\n    \\n            <div class=\"login-line\">\\n                <label class=\"input-label\" htmlfor=\"password\">Password</label>\\n                <input class=\"input login-input\" type=\"password\" placeholder=\"Password\" name=\"password\" required=\"\">\\n            </div>\\n            <div class=\"login-line\">\\n                <button class=\"btn login-button\" type=\"submit\">Login</button>\\n            </div>\\n        </form>\\n    </div>');\n}));\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Task.html\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/ui/Task.html                                                                                      //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nmodule.link(\"./template.Task.js\", { \"*\": \"*+\" });\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.Task.js\":function module(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/ui/template.Task.js                                                                               //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\n\nTemplate.__checkName(\"task\");\nTemplate[\"task\"] = new Template(\"Template.task\", (function() {\n  var view = this;\n  return HTML.LI({\n    class: \"task-line\"\n  }, \"\\n        \", HTML.LABEL({\n    class: \"checkbox-container\"\n  }, HTML.SPAN({\n    class: \"select-text\"\n  }, Blaze.View(\"lookup:text\", function() {\n    return Spacebars.mustache(view.lookup(\"text\"));\n  })), \"\\n            \", HTML.INPUT({\n    class: \"toggle-checked\",\n    checked: function() {\n      return Spacebars.mustache(view.lookup(\"isChecked\"));\n    },\n    type: \"checkbox\"\n  }), HTML.Raw('\\n            <span class=\"checkmark\"></span>\\n        ')), HTML.Raw('\\n        <button class=\"btn delete\">&times;</button>\\n    '));\n}));\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"App.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/ui/App.js                                                                                         //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nvar _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Template;\nmodule.link(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 1);\nvar TasksCollection;\nmodule.link(\"../db/TasksCollection\", {\n  TasksCollection: function (v) {\n    TasksCollection = v;\n  }\n}, 2);\nvar ReactiveDict;\nmodule.link(\"meteor/reactive-dict\", {\n  ReactiveDict: function (v) {\n    ReactiveDict = v;\n  }\n}, 3);\nvar toastr;\nmodule.link(\"toastr\", {\n  \"default\": function (v) {\n    toastr = v;\n  }\n}, 4);\nmodule.link(\"./App.html\");\nmodule.link(\"./Task.js\");\nmodule.link(\"./Login.js\");\nvar HIDE_COMPLETED_STRING = \"hideCompleted\";\n\nvar getUser = function () {\n  return Meteor.user();\n};\n\nvar isUserLogged = function () {\n  return !!getUser();\n};\n\nvar getTasksFilter = function () {\n  var user = getUser();\n  var hideCompletedFilter = {\n    isChecked: {\n      $ne: true\n    }\n  };\n  var userFilter = user ? {\n    userId: user._id\n  } : {};\n\n  var pendingOnlyFilter = _objectSpread(_objectSpread({}, hideCompletedFilter), userFilter);\n\n  return {\n    userFilter: userFilter,\n    pendingOnlyFilter: pendingOnlyFilter\n  };\n};\n\nTemplate.mainContainer.onCreated(function () {\n  function mainContainerOnCreated() {\n    this.state = new ReactiveDict();\n  }\n\n  return mainContainerOnCreated;\n}());\nTemplate.form.onCreated(function () {\n  function mainContainerOnCreated() {\n    this.state = new ReactiveDict();\n  }\n\n  return mainContainerOnCreated;\n}());\nTemplate.mainContainer.events({\n  \"click .user\": function () {\n    Meteor.logout();\n  }\n});\nTemplate.mainContainer.helpers({\n  tasks: function () {\n    var instance = Template.instance();\n    var hideCompleted = instance.state.get(HIDE_COMPLETED_STRING);\n\n    var _getTasksFilter = getTasksFilter(),\n        pendingOnlyFilter = _getTasksFilter.pendingOnlyFilter,\n        userFilter = _getTasksFilter.userFilter;\n\n    if (!isUserLogged()) {\n      return [];\n    }\n\n    return TasksCollection.find(hideCompleted ? pendingOnlyFilter : userFilter, {\n      sort: {\n        createdAt: -1\n      }\n    }).fetch();\n  },\n  incompleteCount: function () {\n    if (!isUserLogged()) {\n      return \"\";\n    }\n\n    var _getTasksFilter2 = getTasksFilter(),\n        pendingOnlyFilter = _getTasksFilter2.pendingOnlyFilter;\n\n    var incompleteTasksCount = TasksCollection.find(pendingOnlyFilter).count();\n    return incompleteTasksCount ? \"(\" + incompleteTasksCount + \")\" : \"\";\n  },\n  hideCompleted: function () {\n    return Template.instance().state.get(HIDE_COMPLETED_STRING);\n  },\n  isUserLogged: function () {\n    return isUserLogged();\n  },\n  getUser: function () {\n    return getUser();\n  }\n});\nTemplate.form.events({\n  \"submit .task-form\": function (event) {\n    // Prevent default browser form submit\n    event.preventDefault(); // Get value from form element\n\n    var target = event.target;\n    var text = target.text.value; // Insert a task into the collection\n\n    if (text != \"\") {\n      Meteor.call(\"tasks.insert\", text, function (err, res) {\n        if (err) {\n          toastr.error(\"Add task error\");\n        } else {\n          toastr.success(\"Task added successfully\");\n        }\n      });\n    } // Clear form\n\n\n    target.text.value = \"\";\n  },\n  \"click #hide-completed-button\": function (event, instance) {\n    var currentHideCompleted = instance.state.get(HIDE_COMPLETED_STRING);\n    instance.state.set(HIDE_COMPLETED_STRING, !currentHideCompleted);\n  }\n});\nTemplate.form.helpers({\n  hideCompleted: function () {\n    return Template.instance().state.get(HIDE_COMPLETED_STRING);\n  }\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Login.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/ui/Login.js                                                                                       //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Template;\nmodule.link(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 1);\nvar toastr;\nmodule.link(\"toastr\", {\n  \"default\": function (v) {\n    toastr = v;\n  }\n}, 2);\nmodule.link(\"./Login.html\");\nTemplate.login.events({\n  \"submit .login-form\": function (event) {\n    event.preventDefault();\n    var target = event.target;\n    var username = target.username.value;\n    var password = target.password.value;\n    Meteor.loginWithPassword(username, password, function (err) {\n      if (err) {\n        toastr.error(\"Login error\");\n      }\n    });\n  }\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Task.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/ui/Task.js                                                                                        //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Template;\nmodule.link(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 1);\nvar toastr;\nmodule.link(\"toastr\", {\n  \"default\": function (v) {\n    toastr = v;\n  }\n}, 2);\nmodule.link(\"./Task.html\");\nTemplate.task.events({\n  \"click .toggle-checked\": function () {\n    Meteor.call(\"tasks.setIsChecked\", this._id, !this.isChecked);\n  },\n  \"click .delete\": function () {\n    Meteor.call(\"tasks.remove\", this._id, function (err, res) {\n      if (err) {\n        toastr.error(\"Remove task error\");\n      } else {\n        toastr.success(\"Task removed successfully\");\n      }\n    });\n  }\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"db\":{\"TasksCollection.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/db/TasksCollection.js                                                                             //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nmodule.export({\n  TasksCollection: function () {\n    return TasksCollection;\n  }\n});\nvar Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 0);\nvar TasksCollection = new Mongo.Collection(\"tasks\");\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"client\":{\"main.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// client/main.js                                                                                            //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nmodule.link(\"../imports/ui/App.js\");\nmodule.link(\"toastr/build/toastr.min.css\");\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".mjs\",\n    \".ts\",\n    \".scss\"\n  ]\n});\n\nvar exports = require(\"/client/main.js\");","hash":"bb9498ac09413df75deea4ff67a23408b6c4c9e4","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/ui/App.js","imports/ui/Login.js","imports/ui/Task.js","imports/db/TasksCollection.js","client/main.js"],"names":["_objectSpread","module","link","default","v","Meteor","Template","TasksCollection","ReactiveDict","toastr","HIDE_COMPLETED_STRING","getUser","user","isUserLogged","getTasksFilter","hideCompletedFilter","isChecked","$ne","userFilter","userId","_id","pendingOnlyFilter","mainContainer","onCreated","mainContainerOnCreated","state","form","events","logout","helpers","tasks","instance","hideCompleted","get","find","sort","createdAt","fetch","incompleteCount","incompleteTasksCount","count","event","preventDefault","target","text","value","call","err","res","error","success","currentHideCompleted","set","login","username","password","loginWithPassword","task","export","Mongo","Collection"],"mappings":"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","file":"/app.js","sourcesContent":["import { Meteor } from \"meteor/meteor\";\r\nimport { Template } from \"meteor/templating\";\r\nimport { TasksCollection } from \"../db/TasksCollection\";\r\nimport { ReactiveDict } from \"meteor/reactive-dict\";\r\nimport toastr from \"toastr\";\r\nimport \"./App.html\";\r\nimport \"./Task.js\";\r\nimport \"./Login.js\";\r\n\r\nconst HIDE_COMPLETED_STRING = \"hideCompleted\";\r\n\r\nconst getUser = () => Meteor.user();\r\nconst isUserLogged = () => !!getUser();\r\n\r\nconst getTasksFilter = () => {\r\n  const user = getUser();\r\n\r\n  const hideCompletedFilter = { isChecked: { $ne: true } };\r\n\r\n  const userFilter = user ? { userId: user._id } : {};\r\n\r\n  const pendingOnlyFilter = { ...hideCompletedFilter, ...userFilter };\r\n\r\n  return { userFilter, pendingOnlyFilter };\r\n};\r\n\r\nTemplate.mainContainer.onCreated(function mainContainerOnCreated() {\r\n  this.state = new ReactiveDict();\r\n});\r\n\r\nTemplate.form.onCreated(function mainContainerOnCreated() {\r\n  this.state = new ReactiveDict();\r\n});\r\n\r\nTemplate.mainContainer.events({\r\n  \"click .user\"() {\r\n    Meteor.logout();\r\n  },\r\n});\r\n\r\nTemplate.mainContainer.helpers({\r\n  tasks() {\r\n    const instance = Template.instance();\r\n    const hideCompleted = instance.state.get(HIDE_COMPLETED_STRING);\r\n\r\n    const { pendingOnlyFilter, userFilter } = getTasksFilter();\r\n\r\n    if (!isUserLogged()) {\r\n      return [];\r\n    }\r\n    return TasksCollection.find(\r\n      hideCompleted ? pendingOnlyFilter : userFilter,\r\n      {\r\n        sort: { createdAt: -1 },\r\n      }\r\n    ).fetch();\r\n  },\r\n  incompleteCount() {\r\n    if (!isUserLogged()) {\r\n      return \"\";\r\n    }\r\n\r\n    const { pendingOnlyFilter } = getTasksFilter();\r\n\r\n    const incompleteTasksCount =\r\n      TasksCollection.find(pendingOnlyFilter).count();\r\n    return incompleteTasksCount ? `(${incompleteTasksCount})` : \"\";\r\n  },\r\n  hideCompleted() {\r\n    return Template.instance().state.get(HIDE_COMPLETED_STRING);\r\n  },\r\n  isUserLogged() {\r\n    return isUserLogged();\r\n  },\r\n  getUser() {\r\n    return getUser();\r\n  },\r\n});\r\n\r\nTemplate.form.events({\r\n  \"submit .task-form\"(event) {\r\n    // Prevent default browser form submit\r\n    event.preventDefault();\r\n\r\n    // Get value from form element\r\n    const { target } = event;\r\n    const text = target.text.value;\r\n\r\n    // Insert a task into the collection\r\n    if (text != \"\") {\r\n      Meteor.call(\"tasks.insert\", text, (err, res) => {\r\n        if (err) {\r\n          toastr.error(\"Add task error\");\r\n        } else {\r\n          toastr.success(\"Task added successfully\");\r\n        }\r\n      });\r\n    }\r\n\r\n    // Clear form\r\n    target.text.value = \"\";\r\n  },\r\n  \"click #hide-completed-button\"(event, instance) {\r\n    const currentHideCompleted = instance.state.get(HIDE_COMPLETED_STRING);\r\n    instance.state.set(HIDE_COMPLETED_STRING, !currentHideCompleted);\r\n  },\r\n});\r\n\r\nTemplate.form.helpers({\r\n  hideCompleted() {\r\n    return Template.instance().state.get(HIDE_COMPLETED_STRING);\r\n  },\r\n});\r\n","import { Meteor } from \"meteor/meteor\";\r\nimport { Template } from \"meteor/templating\";\r\nimport toastr from \"toastr\";\r\nimport \"./Login.html\";\r\n\r\nTemplate.login.events({\r\n  \"submit .login-form\"(event) {\r\n    event.preventDefault();\r\n\r\n    const { target } = event;\r\n\r\n    const username = target.username.value;\r\n    const password = target.password.value;\r\n    Meteor.loginWithPassword(username, password, (err) => {\r\n      if (err) {\r\n        toastr.error(\"Login error\");\r\n      }\r\n    });\r\n  },\r\n});\r\n","import { Meteor } from \"meteor/meteor\";\r\nimport { Template } from \"meteor/templating\";\r\nimport toastr from \"toastr\";\r\n\r\nimport \"./Task.html\";\r\n\r\nTemplate.task.events({\r\n  \"click .toggle-checked\"() {\r\n    Meteor.call(\"tasks.setIsChecked\", this._id, !this.isChecked);\r\n  },\r\n  \"click .delete\"() {\r\n    Meteor.call(\"tasks.remove\", this._id, (err, res) => {\r\n      if (err) {\r\n        toastr.error(\"Remove task error\");\r\n      } else {\r\n        toastr.success(\"Task removed successfully\");\r\n      }\r\n    });\r\n  },\r\n});\r\n","import { Mongo } from \"meteor/mongo\";\r\n\r\nexport const TasksCollection = new Mongo.Collection(\"tasks\");\r\n","import \"../imports/ui/App.js\";\nimport \"toastr/build/toastr.min.css\";\n"]}}]