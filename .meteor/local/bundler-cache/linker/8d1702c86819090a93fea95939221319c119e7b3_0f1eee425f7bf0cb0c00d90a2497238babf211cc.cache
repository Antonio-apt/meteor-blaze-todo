[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDevErrorOverlay = Package['dev-error-overlay'].DevErrorOverlay;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package.modules.meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\nSymbol = Package['ecmascript-runtime-client'].Symbol;\nMap = Package['ecmascript-runtime-client'].Map;\nSet = Package['ecmascript-runtime-client'].Set;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"ui\":{\"App.html\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                     //\n// imports/ui/App.html                                                                                 //\n//                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                       //\nmodule.link(\"./template.App.js\", { \"*\": \"*+\" });\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.App.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                     //\n// imports/ui/template.App.js                                                                          //\n//                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                       //\n\nTemplate.body.addContent((function() {\n  var view = this;\n  return Spacebars.include(view.lookupTemplate(\"mainContainer\"));\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"mainContainer\");\nTemplate[\"mainContainer\"] = new Template(\"Template.mainContainer\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, HTML.Raw(\"\\n        <header>\\n            <h1>Todo List</h1>\\n        </header>\\n\\n        \"), Spacebars.include(view.lookupTemplate(\"form\")), \"\\n\\n        \", HTML.UL(\"\\n            \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"tasks\"));\n  }, function() {\n    return [ \"\\n                \", Spacebars.include(view.lookupTemplate(\"task\")), \"\\n            \" ];\n  }), \"\\n        \"), \"\\n    \");\n}));\n\nTemplate.__checkName(\"task\");\nTemplate[\"task\"] = new Template(\"Template.task\", (function() {\n  var view = this;\n  return HTML.LI(Blaze.View(\"lookup:text\", function() {\n    return Spacebars.mustache(view.lookup(\"text\"));\n  }));\n}));\n\nTemplate.__checkName(\"form\");\nTemplate[\"form\"] = new Template(\"Template.form\", (function() {\n  var view = this;\n  return HTML.Raw('<form class=\"task-form\">\\n        <input type=\"text\" name=\"text\" placeholder=\"Type to add new tasks\">\\n        <button type=\"submit\">Add Task</button>\\n    </form>');\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"App.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                     //\n// imports/ui/App.js                                                                                   //\n//                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                       //\nvar Template;\nmodule.link(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 0);\nvar TasksCollection;\nmodule.link(\"../api/TasksCollection\", {\n  TasksCollection: function (v) {\n    TasksCollection = v;\n  }\n}, 1);\nmodule.link(\"./App.html\");\nTemplate.mainContainer.helpers({\n  tasks: function () {\n    return TasksCollection.find({}, {\n      sort: {\n        createdAt: -1\n      }\n    });\n  }\n});\nTemplate.form.events({\n  \"submit .task-form\": function (event) {\n    // Prevent default browser form submit\n    event.preventDefault(); // Get value from form element\n\n    var target = event.target;\n    var text = target.text.value; // Insert a task into the collection\n\n    TasksCollection.insert({\n      text: text,\n      createdAt: new Date() // current time\n\n    }); // Clear form\n\n    target.text.value = \"\";\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"api\":{\"TasksCollection.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                     //\n// imports/api/TasksCollection.js                                                                      //\n//                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                       //\nmodule.export({\n  TasksCollection: function () {\n    return TasksCollection;\n  }\n});\nvar Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 0);\nvar TasksCollection = new Mongo.Collection(\"tasks\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"client\":{\"main.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                     //\n// client/main.js                                                                                      //\n//                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                       //\nmodule.link(\"../imports/ui/App.js\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\n\nvar exports = require(\"/client/main.js\");","hash":"f2e7fa81ef4dba17459565bf90926be8736de620","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/ui/App.js","imports/api/TasksCollection.js","client/main.js"],"names":["Template","module","link","v","TasksCollection","mainContainer","helpers","tasks","find","sort","createdAt","form","events","event","preventDefault","target","text","value","insert","Date","export","Mongo","Collection"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,QAAJ;AAAaC,MAAM,CAACC,IAAP,CAAY,mBAAZ,EAAgC;AAACF,UAAQ,EAAC,UAASG,CAAT,EAAW;AAACH,YAAQ,GAACG,CAAT;AAAW;AAAjC,CAAhC,EAAmE,CAAnE;AAAsE,IAAIC,eAAJ;AAAoBH,MAAM,CAACC,IAAP,CAAY,wBAAZ,EAAqC;AAACE,iBAAe,EAAC,UAASD,CAAT,EAAW;AAACC,mBAAe,GAACD,CAAhB;AAAkB;AAA/C,CAArC,EAAsF,CAAtF;AAAyFF,MAAM,CAACC,IAAP,CAAY,YAAZ;AAIhMF,QAAQ,CAACK,aAAT,CAAuBC,OAAvB,CAA+B;AAC7BC,OAD6B,cACrB;AACN,WAAOH,eAAe,CAACI,IAAhB,CAAqB,EAArB,EAAyB;AAAEC,UAAI,EAAE;AAAEC,iBAAS,EAAE,CAAC;AAAd;AAAR,KAAzB,CAAP;AACD;AAH4B,CAA/B;AAMAV,QAAQ,CAACW,IAAT,CAAcC,MAAd,CAAqB;AACnB,qBADmB,YACCC,KADD,EACQ;AACzB;AACAA,SAAK,CAACC,cAAN,GAFyB,CAIzB;;AACA,QAAMC,MAAM,GAAGF,KAAK,CAACE,MAArB;AACA,QAAMC,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAYC,KAAzB,CANyB,CAQzB;;AACAb,mBAAe,CAACc,MAAhB,CAAuB;AACrBF,UAAI,EAAJA,IADqB;AAErBN,eAAS,EAAE,IAAIS,IAAJ,EAFU,CAEE;;AAFF,KAAvB,EATyB,CAczB;;AACAJ,UAAM,CAACC,IAAP,CAAYC,KAAZ,GAAoB,EAApB;AACD;AAjBkB,CAArB,E;;;;;;;;;;;ACVAhB,MAAM,CAACmB,MAAP,CAAc;AAAChB,iBAAe,EAAC,YAAU;AAAC,WAAOA,eAAP;AAAuB;AAAnD,CAAd;AAAoE,IAAIiB,KAAJ;AAAUpB,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAACmB,OAAK,EAAC,UAASlB,CAAT,EAAW;AAACkB,SAAK,GAAClB,CAAN;AAAQ;AAA3B,CAA3B,EAAwD,CAAxD;AAEvE,IAAMC,eAAe,GAAG,IAAIiB,KAAK,CAACC,UAAV,CAAqB,OAArB,CAAxB,C;;;;;;;;;;;ACFPrB,MAAM,CAACC,IAAP,CAAY,sBAAZ,E","file":"/app.js","sourcesContent":["import { Template } from \"meteor/templating\";\r\nimport { TasksCollection } from \"../api/TasksCollection\";\r\nimport \"./App.html\";\r\n\r\nTemplate.mainContainer.helpers({\r\n  tasks() {\r\n    return TasksCollection.find({}, { sort: { createdAt: -1 } });\r\n  },\r\n});\r\n\r\nTemplate.form.events({\r\n  \"submit .task-form\"(event) {\r\n    // Prevent default browser form submit\r\n    event.preventDefault();\r\n\r\n    // Get value from form element\r\n    const target = event.target;\r\n    const text = target.text.value;\r\n\r\n    // Insert a task into the collection\r\n    TasksCollection.insert({\r\n      text,\r\n      createdAt: new Date(), // current time\r\n    });\r\n\r\n    // Clear form\r\n    target.text.value = \"\";\r\n  },\r\n});\r\n","import { Mongo } from \"meteor/mongo\";\r\n\r\nexport const TasksCollection = new Mongo.Collection(\"tasks\");\r\n","import \"../imports/ui/App.js\";\n"]}}]