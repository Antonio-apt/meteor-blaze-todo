[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDevErrorOverlay = Package['dev-error-overlay'].DevErrorOverlay;\nReactiveDict = Package['reactive-dict'].ReactiveDict;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"ui\":{\"App.html\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/ui/App.html                                                                                       //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nmodule.link(\"./template.App.js\", { \"*\": \"*+\" });\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.App.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/ui/template.App.js                                                                                //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\n\n(function () {\n  var renderFunc = (function() {\n  var view = this;\n  return Spacebars.include(view.lookupTemplate(\"mainContainer\"));\n});\n  Template.body.addContent(renderFunc);\n  Meteor.startup(Template.body.renderToDocument);\n  if (typeof module === \"object\" && module.hot) {\n    module.hot.accept();\n    module.hot.dispose(function () {\n      var index = Template.body.contentRenderFuncs.indexOf(renderFunc)\n      Template.body.contentRenderFuncs.splice(index, 1);\n      Template._applyHmrChanges();\n    });\n  }\n})();\n\nTemplate._migrateTemplate(\n  \"mainContainer\",\n  new Template(\"Template.mainContainer\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"app\"\n  }, \"\\n        \", HTML.HEADER(\"\\n            \", HTML.DIV({\n    class: \"app-bar\"\n  }, \"\\n                \", HTML.DIV({\n    class: \"app-header\"\n  }, \"\\n                    \", HTML.H1(\"üìùÔ∏è To Do List \", Blaze.View(\"lookup:incompleteCount\", function() {\n    return Spacebars.mustache(view.lookup(\"incompleteCount\"));\n  })), \"\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n\\n        \", HTML.DIV({\n    class: \"main\"\n  }, \"\\n            \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isUserLogged\"));\n  }, function() {\n    return [ \"\\n            \", HTML.DIV({\n      class: \"user\"\n    }, \"\\n                Hello, \", Blaze.View(\"lookup:getUser.username\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"getUser\"), \"username\"));\n    }), HTML.Raw(' <span class=\"logout\" title=\"Sair\">üö™</span>\\n            ')), \"\\n            \", Spacebars.include(view.lookupTemplate(\"form\")), \"\\n\\n            \", HTML.UL({\n      class: \"tasks\"\n    }, \"\\n                \", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"tasks\"));\n    }, function() {\n      return [ \"\\n                \", Spacebars.include(view.lookupTemplate(\"task\")), \"\\n                \" ];\n    }), \"\\n            \"), \"\\n            \" ];\n  }, function() {\n    return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"login\")), \"\\n            \" ];\n  }), \"\\n        \"), \"\\n    \");\n})),\n);\nif (typeof module === \"object\" && module.hot) {\n  module.hot.accept();\n  module.hot.dispose(function () {\n    Template.__pendingReplacement.push(\"mainContainer\");\n    Template._applyHmrChanges(\"mainContainer\");\n  });\n}\n\nTemplate._migrateTemplate(\n  \"form\",\n  new Template(\"Template.form\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"task-actions-container\"\n  }, HTML.Raw('\\n        <form class=\"task-form\">\\n            <input class=\"input\" type=\"text\" name=\"text\" placeholder=\"Type to add new tasks\">\\n            <button class=\"btn\" type=\"submit\">Add Task</button>\\n        </form>\\n        '), HTML.DIV({\n    class: \"filter\"\n  }, \"\\n            \", HTML.BUTTON({\n    class: \"btn\",\n    id: \"hide-completed-button\"\n  }, \"\\n                \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"hideCompleted\"));\n  }, function() {\n    return \"\\n                Show All\\n                \";\n  }, function() {\n    return \"\\n                Hide Completed\\n                \";\n  }), \"\\n            \"), \"\\n        \"), \"\\n    \");\n})),\n);\nif (typeof module === \"object\" && module.hot) {\n  module.hot.accept();\n  module.hot.dispose(function () {\n    Template.__pendingReplacement.push(\"form\");\n    Template._applyHmrChanges(\"form\");\n  });\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Login.html\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/ui/Login.html                                                                                     //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nmodule.link(\"./template.Login.js\", { \"*\": \"*+\" });\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.Login.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/ui/template.Login.js                                                                              //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\n\nTemplate._migrateTemplate(\n  \"login\",\n  new Template(\"Template.login\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"login-container\">\\n        <form class=\"login-form\">\\n            <div class=\"login-line\">\\n                <label class=\"input-label\" htmlfor=\"username\">Username</label>\\n                <input class=\"input login-input\" type=\"text\" placeholder=\"Username\" name=\"username\" required=\"\">\\n            </div>\\n    \\n            <div class=\"login-line\">\\n                <label class=\"input-label\" htmlfor=\"password\">Password</label>\\n                <input class=\"input login-input\" type=\"password\" placeholder=\"Password\" name=\"password\" required=\"\">\\n            </div>\\n            <div class=\"login-line\">\\n                <button class=\"btn login-button\" type=\"submit\">Login</button>\\n            </div>\\n        </form>\\n    </div>');\n})),\n);\nif (typeof module === \"object\" && module.hot) {\n  module.hot.accept();\n  module.hot.dispose(function () {\n    Template.__pendingReplacement.push(\"login\");\n    Template._applyHmrChanges(\"login\");\n  });\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Task.html\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/ui/Task.html                                                                                      //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nmodule.link(\"./template.Task.js\", { \"*\": \"*+\" });\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.Task.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/ui/template.Task.js                                                                               //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\n\nTemplate._migrateTemplate(\n  \"task\",\n  new Template(\"Template.task\", (function() {\n  var view = this;\n  return HTML.LI({\n    class: \"task-line\"\n  }, \"\\n        \", HTML.LABEL({\n    class: \"checkbox-container\"\n  }, HTML.SPAN({\n    class: \"select-text\"\n  }, Blaze.View(\"lookup:text\", function() {\n    return Spacebars.mustache(view.lookup(\"text\"));\n  })), \"\\n            \", HTML.INPUT({\n    class: \"toggle-checked\",\n    checked: function() {\n      return Spacebars.mustache(view.lookup(\"isChecked\"));\n    },\n    type: \"checkbox\"\n  }), HTML.Raw('\\n            <span class=\"checkmark\"></span>\\n        ')), HTML.Raw('\\n        <button class=\"btn delete\">&times;</button>\\n    '));\n})),\n);\nif (typeof module === \"object\" && module.hot) {\n  module.hot.accept();\n  module.hot.dispose(function () {\n    Template.__pendingReplacement.push(\"task\");\n    Template._applyHmrChanges(\"task\");\n  });\n}\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"App.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/ui/App.js                                                                                         //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nlet _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Template;\nmodule.link(\"meteor/templating\", {\n  Template(v) {\n    Template = v;\n  }\n\n}, 1);\nlet TasksCollection;\nmodule.link(\"../db/TasksCollection\", {\n  TasksCollection(v) {\n    TasksCollection = v;\n  }\n\n}, 2);\nlet ReactiveDict;\nmodule.link(\"meteor/reactive-dict\", {\n  ReactiveDict(v) {\n    ReactiveDict = v;\n  }\n\n}, 3);\nlet toastr;\nmodule.link(\"toastr\", {\n  default(v) {\n    toastr = v;\n  }\n\n}, 4);\nmodule.link(\"./App.html\");\nmodule.link(\"./Task.js\");\nmodule.link(\"./Login.js\");\nconst HIDE_COMPLETED_STRING = \"hideCompleted\";\n\nconst getUser = () => Meteor.user();\n\nconst isUserLogged = () => !!getUser();\n\nconst getTasksFilter = () => {\n  const user = getUser();\n  const hideCompletedFilter = {\n    isChecked: {\n      $ne: true\n    }\n  };\n  const userFilter = user ? {\n    userId: user._id\n  } : {};\n\n  const pendingOnlyFilter = _objectSpread(_objectSpread({}, hideCompletedFilter), userFilter);\n\n  return {\n    userFilter,\n    pendingOnlyFilter\n  };\n};\n\nTemplate.mainContainer.onCreated(function mainContainerOnCreated() {\n  this.state = new ReactiveDict();\n});\nTemplate.form.onCreated(function mainContainerOnCreated() {\n  this.state = new ReactiveDict();\n});\nTemplate.mainContainer.events({\n  \"click .user\"() {\n    Meteor.logout();\n  }\n\n});\nTemplate.mainContainer.helpers({\n  tasks() {\n    const instance = Template.instance();\n    const hideCompleted = instance.state.get(HIDE_COMPLETED_STRING);\n    const {\n      pendingOnlyFilter,\n      userFilter\n    } = getTasksFilter();\n\n    if (!isUserLogged()) {\n      return [];\n    }\n\n    return TasksCollection.find(hideCompleted ? pendingOnlyFilter : userFilter, {\n      sort: {\n        createdAt: -1\n      }\n    }).fetch();\n  },\n\n  incompleteCount() {\n    if (!isUserLogged()) {\n      return \"\";\n    }\n\n    const {\n      pendingOnlyFilter\n    } = getTasksFilter();\n    const incompleteTasksCount = TasksCollection.find(pendingOnlyFilter).count();\n    return incompleteTasksCount ? \"(\".concat(incompleteTasksCount, \")\") : \"\";\n  },\n\n  hideCompleted() {\n    return Template.instance().state.get(HIDE_COMPLETED_STRING);\n  },\n\n  isUserLogged() {\n    return isUserLogged();\n  },\n\n  getUser() {\n    return getUser();\n  }\n\n});\nTemplate.form.events({\n  \"submit .task-form\"(event) {\n    // Prevent default browser form submit\n    event.preventDefault(); // Get value from form element\n\n    const {\n      target\n    } = event;\n    const text = target.text.value; // Insert a task into the collection\n\n    if (text != \"\") {\n      Meteor.call(\"tasks.insert\", text, (err, res) => {\n        if (err) {\n          toastr.error(\"Add task error\");\n        } else {\n          toastr.success(\"Task added successfully\");\n        }\n      });\n    } // Clear form\n\n\n    target.text.value = \"\";\n  },\n\n  \"click #hide-completed-button\"(event, instance) {\n    const currentHideCompleted = instance.state.get(HIDE_COMPLETED_STRING);\n    instance.state.set(HIDE_COMPLETED_STRING, !currentHideCompleted);\n  }\n\n});\nTemplate.form.helpers({\n  hideCompleted() {\n    return Template.instance().state.get(HIDE_COMPLETED_STRING);\n  }\n\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Login.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/ui/Login.js                                                                                       //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Template;\nmodule.link(\"meteor/templating\", {\n  Template(v) {\n    Template = v;\n  }\n\n}, 1);\nlet toastr;\nmodule.link(\"toastr\", {\n  default(v) {\n    toastr = v;\n  }\n\n}, 2);\nmodule.link(\"./Login.html\");\nTemplate.login.events({\n  \"submit .login-form\"(event) {\n    event.preventDefault();\n    const {\n      target\n    } = event;\n    const username = target.username.value;\n    const password = target.password.value;\n    Meteor.loginWithPassword(username, password, err => {\n      if (err) {\n        toastr.error(\"Login error\");\n      }\n    });\n  }\n\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Task.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/ui/Task.js                                                                                        //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Template;\nmodule.link(\"meteor/templating\", {\n  Template(v) {\n    Template = v;\n  }\n\n}, 1);\nlet toastr;\nmodule.link(\"toastr\", {\n  default(v) {\n    toastr = v;\n  }\n\n}, 2);\nmodule.link(\"./Task.html\");\nTemplate.task.events({\n  \"click .toggle-checked\"() {\n    Meteor.call(\"tasks.setIsChecked\", this._id, !this.isChecked);\n  },\n\n  \"click .delete\"() {\n    Meteor.call(\"tasks.remove\", this._id, (err, res) => {\n      if (err) {\n        toastr.error(\"Remove task error\");\n      } else {\n        toastr.success(\"Task removed successfully\");\n      }\n    });\n  }\n\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"db\":{\"TasksCollection.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/db/TasksCollection.js                                                                             //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nmodule.export({\n  TasksCollection: () => TasksCollection\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nconst TasksCollection = new Mongo.Collection(\"tasks\");\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"client\":{\"main.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// client/main.js                                                                                            //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nmodule.link(\"../imports/ui/App.js\");\nmodule.link(\"toastr/build/toastr.min.css\");\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".mjs\",\n    \".ts\",\n    \".scss\"\n  ]\n});\n\nvar exports = require(\"/client/main.js\");","hash":"03ca3025510b8ab62cc49f2bae0d3fec2b94217a","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/ui/App.js","imports/ui/Login.js","imports/ui/Task.js","imports/db/TasksCollection.js","client/main.js"],"names":["HIDE_COMPLETED_STRING","getUser","Meteor","isUserLogged","getTasksFilter","user","hideCompletedFilter","isChecked","$ne","userFilter","userId","_id","pendingOnlyFilter","Template","tasks","instance","hideCompleted","sort","createdAt","incompleteCount","incompleteTasksCount","TasksCollection","event","target","text","toastr","currentHideCompleted","username","password","err","Mongo"],"mappings":"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","file":"/app.js","sourcesContent":["import { Meteor } from \"meteor/meteor\";\r\nimport { Template } from \"meteor/templating\";\r\nimport { TasksCollection } from \"../db/TasksCollection\";\r\nimport { ReactiveDict } from \"meteor/reactive-dict\";\r\nimport toastr from \"toastr\";\r\nimport \"./App.html\";\r\nimport \"./Task.js\";\r\nimport \"./Login.js\";\r\n\r\nconst HIDE_COMPLETED_STRING = \"hideCompleted\";\r\n\r\nconst getUser = () => Meteor.user();\r\nconst isUserLogged = () => !!getUser();\r\n\r\nconst getTasksFilter = () => {\r\n  const user = getUser();\r\n\r\n  const hideCompletedFilter = { isChecked: { $ne: true } };\r\n\r\n  const userFilter = user ? { userId: user._id } : {};\r\n\r\n  const pendingOnlyFilter = { ...hideCompletedFilter, ...userFilter };\r\n\r\n  return { userFilter, pendingOnlyFilter };\r\n};\r\n\r\nTemplate.mainContainer.onCreated(function mainContainerOnCreated() {\r\n  this.state = new ReactiveDict();\r\n});\r\n\r\nTemplate.form.onCreated(function mainContainerOnCreated() {\r\n  this.state = new ReactiveDict();\r\n});\r\n\r\nTemplate.mainContainer.events({\r\n  \"click .user\"() {\r\n    Meteor.logout();\r\n  },\r\n});\r\n\r\nTemplate.mainContainer.helpers({\r\n  tasks() {\r\n    const instance = Template.instance();\r\n    const hideCompleted = instance.state.get(HIDE_COMPLETED_STRING);\r\n\r\n    const { pendingOnlyFilter, userFilter } = getTasksFilter();\r\n\r\n    if (!isUserLogged()) {\r\n      return [];\r\n    }\r\n    return TasksCollection.find(\r\n      hideCompleted ? pendingOnlyFilter : userFilter,\r\n      {\r\n        sort: { createdAt: -1 },\r\n      }\r\n    ).fetch();\r\n  },\r\n  incompleteCount() {\r\n    if (!isUserLogged()) {\r\n      return \"\";\r\n    }\r\n\r\n    const { pendingOnlyFilter } = getTasksFilter();\r\n\r\n    const incompleteTasksCount =\r\n      TasksCollection.find(pendingOnlyFilter).count();\r\n    return incompleteTasksCount ? `(${incompleteTasksCount})` : \"\";\r\n  },\r\n  hideCompleted() {\r\n    return Template.instance().state.get(HIDE_COMPLETED_STRING);\r\n  },\r\n  isUserLogged() {\r\n    return isUserLogged();\r\n  },\r\n  getUser() {\r\n    return getUser();\r\n  },\r\n});\r\n\r\nTemplate.form.events({\r\n  \"submit .task-form\"(event) {\r\n    // Prevent default browser form submit\r\n    event.preventDefault();\r\n\r\n    // Get value from form element\r\n    const { target } = event;\r\n    const text = target.text.value;\r\n\r\n    // Insert a task into the collection\r\n    if (text != \"\") {\r\n      Meteor.call(\"tasks.insert\", text, (err, res) => {\r\n        if (err) {\r\n          toastr.error(\"Add task error\");\r\n        } else {\r\n          toastr.success(\"Task added successfully\");\r\n        }\r\n      });\r\n    }\r\n\r\n    // Clear form\r\n    target.text.value = \"\";\r\n  },\r\n  \"click #hide-completed-button\"(event, instance) {\r\n    const currentHideCompleted = instance.state.get(HIDE_COMPLETED_STRING);\r\n    instance.state.set(HIDE_COMPLETED_STRING, !currentHideCompleted);\r\n  },\r\n});\r\n\r\nTemplate.form.helpers({\r\n  hideCompleted() {\r\n    return Template.instance().state.get(HIDE_COMPLETED_STRING);\r\n  },\r\n});\r\n","import { Meteor } from \"meteor/meteor\";\r\nimport { Template } from \"meteor/templating\";\r\nimport toastr from \"toastr\";\r\nimport \"./Login.html\";\r\n\r\nTemplate.login.events({\r\n  \"submit .login-form\"(event) {\r\n    event.preventDefault();\r\n\r\n    const { target } = event;\r\n\r\n    const username = target.username.value;\r\n    const password = target.password.value;\r\n    Meteor.loginWithPassword(username, password, (err) => {\r\n      if (err) {\r\n        toastr.error(\"Login error\");\r\n      }\r\n    });\r\n  },\r\n});\r\n","import { Meteor } from \"meteor/meteor\";\r\nimport { Template } from \"meteor/templating\";\r\nimport toastr from \"toastr\";\r\n\r\nimport \"./Task.html\";\r\n\r\nTemplate.task.events({\r\n  \"click .toggle-checked\"() {\r\n    Meteor.call(\"tasks.setIsChecked\", this._id, !this.isChecked);\r\n  },\r\n  \"click .delete\"() {\r\n    Meteor.call(\"tasks.remove\", this._id, (err, res) => {\r\n      if (err) {\r\n        toastr.error(\"Remove task error\");\r\n      } else {\r\n        toastr.success(\"Task removed successfully\");\r\n      }\r\n    });\r\n  },\r\n});\r\n","import { Mongo } from \"meteor/mongo\";\r\n\r\nexport const TasksCollection = new Mongo.Collection(\"tasks\");\r\n","import \"../imports/ui/App.js\";\nimport \"toastr/build/toastr.min.css\";\n"]}}]