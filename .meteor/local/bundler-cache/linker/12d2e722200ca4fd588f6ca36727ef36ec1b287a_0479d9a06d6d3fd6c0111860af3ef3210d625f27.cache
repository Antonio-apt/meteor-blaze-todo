[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDevErrorOverlay = Package['dev-error-overlay'].DevErrorOverlay;\nReactiveDict = Package['reactive-dict'].ReactiveDict;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package.modules.meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\nSymbol = Package['ecmascript-runtime-client'].Symbol;\nMap = Package['ecmascript-runtime-client'].Map;\nSet = Package['ecmascript-runtime-client'].Set;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"ui\":{\"App.html\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// imports/ui/App.html                                                                                          //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nmodule.link(\"./template.App.js\", { \"*\": \"*+\" });\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.App.js\":function module(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// imports/ui/template.App.js                                                                                   //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\n\nTemplate.body.addContent((function() {\n  var view = this;\n  return Spacebars.include(view.lookupTemplate(\"mainContainer\"));\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"mainContainer\");\nTemplate[\"mainContainer\"] = new Template(\"Template.mainContainer\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"app\"\n  }, \"\\n        \", HTML.HEADER(\"\\n            \", HTML.DIV({\n    class: \"app-bar\"\n  }, \"\\n                \", HTML.DIV({\n    class: \"app-header\"\n  }, \"\\n                    \", HTML.H1(\"üìùÔ∏è To Do List \", Blaze.View(\"lookup:incompleteCount\", function() {\n    return Spacebars.mustache(view.lookup(\"incompleteCount\"));\n  })), \"\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n\\n        \", HTML.DIV({\n    class: \"main\"\n  }, \"\\n            \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isUserLogged\"));\n  }, function() {\n    return [ \"\\n\\n            \", Spacebars.include(view.lookupTemplate(\"form\")), \"\\n\\n            \", HTML.DIV({\n      class: \"filter\"\n    }, \"\\n                \", HTML.BUTTON({\n      id: \"hide-completed-button\"\n    }, \"\\n                    \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"hideCompleted\"));\n    }, function() {\n      return \"\\n                    Show All\\n                    \";\n    }, function() {\n      return \"\\n                    Hide Completed\\n                    \";\n    }), \"\\n                \"), \"\\n            \"), \"\\n\\n            \", HTML.UL({\n      class: \"tasks\"\n    }, \"\\n                \", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"tasks\"));\n    }, function() {\n      return [ \"\\n                \", Spacebars.include(view.lookupTemplate(\"task\")), \"\\n                \" ];\n    }), \"\\n            \"), \"\\n            \" ];\n  }, function() {\n    return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"login\")), \"\\n            \" ];\n  }), \"\\n        \"), \"\\n    \");\n}));\n\nTemplate.__checkName(\"form\");\nTemplate[\"form\"] = new Template(\"Template.form\", (function() {\n  var view = this;\n  return HTML.Raw('<form class=\"task-form\">\\n        <input type=\"text\" name=\"text\" placeholder=\"Type to add new tasks\">\\n        <button type=\"submit\">Add Task</button>\\n    </form>');\n}));\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Task.html\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// imports/ui/Task.html                                                                                         //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nmodule.link(\"./template.Task.js\", { \"*\": \"*+\" });\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.Task.js\":function module(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// imports/ui/template.Task.js                                                                                  //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\n\nTemplate.__checkName(\"task\");\nTemplate[\"task\"] = new Template(\"Template.task\", (function() {\n  var view = this;\n  return HTML.LI(\"\\n        \", HTML.INPUT({\n    type: \"checkbox\",\n    checked: function() {\n      return Spacebars.mustache(view.lookup(\"isChecked\"));\n    },\n    class: \"toggle-checked\"\n  }), \"\\n        \", HTML.SPAN(Blaze.View(\"lookup:text\", function() {\n    return Spacebars.mustache(view.lookup(\"text\"));\n  })), HTML.Raw('\\n        <button class=\"delete\">&times;</button>\\n    '));\n}));\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"App.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// imports/ui/App.js                                                                                            //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nvar Template;\nmodule.link(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 0);\nvar TasksCollection;\nmodule.link(\"../api/TasksCollection\", {\n  TasksCollection: function (v) {\n    TasksCollection = v;\n  }\n}, 1);\nvar ReactiveDict;\nmodule.link(\"meteor/reactive-dict\", {\n  ReactiveDict: function (v) {\n    ReactiveDict = v;\n  }\n}, 2);\nmodule.link(\"./App.html\");\nmodule.link(\"./Task.js\");\nvar HIDE_COMPLETED_STRING = \"hideCompleted\";\n\nvar getUser = function () {\n  return Meteor.user();\n};\n\nvar isUserLogged = function () {\n  return !!getUser();\n};\n\nTemplate.mainContainer.onCreated(function () {\n  function mainContainerOnCreated() {\n    this.state = new ReactiveDict();\n  }\n\n  return mainContainerOnCreated;\n}());\nTemplate.mainContainer.events({\n  \"click #hide-completed-button\": function (event, instance) {\n    var currentHideCompleted = instance.state.get(HIDE_COMPLETED_STRING);\n    instance.state.set(HIDE_COMPLETED_STRING, !currentHideCompleted);\n  }\n});\nTemplate.mainContainer.helpers({\n  tasks: function () {\n    var instance = Template.instance();\n    var hideCompleted = instance.state.get(HIDE_COMPLETED_STRING);\n    var hideCompletedFilter = {\n      isChecked: {\n        $ne: true\n      }\n    };\n    return TasksCollection.find(hideCompleted ? hideCompletedFilter : {}, {\n      sort: {\n        createdAt: -1\n      }\n    }).fetch();\n  },\n  hideCompleted: function () {\n    return Template.instance().state.get(HIDE_COMPLETED_STRING);\n  },\n  incompleteCount: function () {\n    var incompleteTasksCount = TasksCollection.find({\n      isChecked: {\n        $ne: true\n      }\n    }).count();\n    return incompleteTasksCount ? \"(\" + incompleteTasksCount + \")\" : \"\";\n  },\n  isUserLogged: function () {\n    return isUserLogged();\n  }\n});\nTemplate.form.events({\n  \"submit .task-form\": function (event) {\n    // Prevent default browser form submit\n    event.preventDefault(); // Get value from form element\n\n    var target = event.target;\n    var text = target.text.value; // Insert a task into the collection\n\n    TasksCollection.insert({\n      text: text,\n      createdAt: new Date() // current time\n\n    }); // Clear form\n\n    target.text.value = \"\";\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Task.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// imports/ui/Task.js                                                                                           //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nvar Template;\nmodule.link(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 0);\nvar TasksCollection;\nmodule.link(\"../api/TasksCollection\", {\n  TasksCollection: function (v) {\n    TasksCollection = v;\n  }\n}, 1);\nmodule.link(\"./Task.html\");\nTemplate.task.events({\n  \"click .toggle-checked\": function () {\n    // Set the checked property to the opposite of its current value\n    TasksCollection.update(this._id, {\n      $set: {\n        isChecked: !this.isChecked\n      }\n    });\n  },\n  \"click .delete\": function () {\n    TasksCollection.remove(this._id);\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"api\":{\"TasksCollection.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// imports/api/TasksCollection.js                                                                               //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nmodule.export({\n  TasksCollection: function () {\n    return TasksCollection;\n  }\n});\nvar Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 0);\nvar TasksCollection = new Mongo.Collection(\"tasks\");\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"client\":{\"main.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// client/main.js                                                                                               //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nmodule.link(\"../imports/ui/App.js\");\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".scss\"\n  ]\n});\n\nvar exports = require(\"/client/main.js\");","hash":"b6082dbea3a65350fb074ac8cf0b8ba08008f547","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/ui/App.js","imports/ui/Task.js","imports/api/TasksCollection.js","client/main.js"],"names":["Template","module","link","v","TasksCollection","ReactiveDict","HIDE_COMPLETED_STRING","getUser","Meteor","user","isUserLogged","mainContainer","onCreated","mainContainerOnCreated","state","events","event","instance","currentHideCompleted","get","set","helpers","tasks","hideCompleted","hideCompletedFilter","isChecked","$ne","find","sort","createdAt","fetch","incompleteCount","incompleteTasksCount","count","form","preventDefault","target","text","value","insert","Date","task","update","_id","$set","remove","export","Mongo","Collection"],"mappings":"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","file":"/app.js","sourcesContent":["import { Template } from \"meteor/templating\";\r\nimport { TasksCollection } from \"../api/TasksCollection\";\r\nimport { ReactiveDict } from \"meteor/reactive-dict\";\r\nimport \"./App.html\";\r\nimport \"./Task.js\";\r\n\r\nconst HIDE_COMPLETED_STRING = \"hideCompleted\";\r\n\r\nconst getUser = () => Meteor.user();\r\nconst isUserLogged = () => !!getUser();\r\n\r\nTemplate.mainContainer.onCreated(function mainContainerOnCreated() {\r\n  this.state = new ReactiveDict();\r\n});\r\n\r\nTemplate.mainContainer.events({\r\n  \"click #hide-completed-button\"(event, instance) {\r\n    const currentHideCompleted = instance.state.get(HIDE_COMPLETED_STRING);\r\n    instance.state.set(HIDE_COMPLETED_STRING, !currentHideCompleted);\r\n  },\r\n});\r\n\r\nTemplate.mainContainer.helpers({\r\n  tasks() {\r\n    const instance = Template.instance();\r\n    const hideCompleted = instance.state.get(HIDE_COMPLETED_STRING);\r\n\r\n    const hideCompletedFilter = { isChecked: { $ne: true } };\r\n\r\n    return TasksCollection.find(hideCompleted ? hideCompletedFilter : {}, {\r\n      sort: { createdAt: -1 },\r\n    }).fetch();\r\n  },\r\n  hideCompleted() {\r\n    return Template.instance().state.get(HIDE_COMPLETED_STRING);\r\n  },\r\n  incompleteCount() {\r\n    const incompleteTasksCount = TasksCollection.find({\r\n      isChecked: { $ne: true },\r\n    }).count();\r\n    return incompleteTasksCount ? `(${incompleteTasksCount})` : \"\";\r\n  },\r\n  isUserLogged() {\r\n    return isUserLogged();\r\n  },\r\n});\r\n\r\nTemplate.form.events({\r\n  \"submit .task-form\"(event) {\r\n    // Prevent default browser form submit\r\n    event.preventDefault();\r\n\r\n    // Get value from form element\r\n    const { target } = event;\r\n    const text = target.text.value;\r\n\r\n    // Insert a task into the collection\r\n    TasksCollection.insert({\r\n      text,\r\n      createdAt: new Date(), // current time\r\n    });\r\n\r\n    // Clear form\r\n    target.text.value = \"\";\r\n  },\r\n});\r\n","import { Template } from \"meteor/templating\";\r\n\r\nimport { TasksCollection } from \"../api/TasksCollection\";\r\n\r\nimport \"./Task.html\";\r\n\r\nTemplate.task.events({\r\n  \"click .toggle-checked\"() {\r\n    // Set the checked property to the opposite of its current value\r\n    TasksCollection.update(this._id, {\r\n      $set: { isChecked: !this.isChecked },\r\n    });\r\n  },\r\n  \"click .delete\"() {\r\n    TasksCollection.remove(this._id);\r\n  },\r\n});\r\n","import { Mongo } from \"meteor/mongo\";\r\n\r\nexport const TasksCollection = new Mongo.Collection(\"tasks\");\r\n","import \"../imports/ui/App.js\";\n"]}}]