[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDevErrorOverlay = Package['dev-error-overlay'].DevErrorOverlay;\nReactiveDict = Package['reactive-dict'].ReactiveDict;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package.modules.meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\nSymbol = Package['ecmascript-runtime-client'].Symbol;\nMap = Package['ecmascript-runtime-client'].Map;\nSet = Package['ecmascript-runtime-client'].Set;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"ui\":{\"App.html\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                   //\n// imports/ui/App.html                                                                               //\n//                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                     //\nmodule.link(\"./template.App.js\", { \"*\": \"*+\" });\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.App.js\":function module(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                   //\n// imports/ui/template.App.js                                                                        //\n//                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                     //\n\nTemplate.body.addContent((function() {\n  var view = this;\n  return Spacebars.include(view.lookupTemplate(\"mainContainer\"));\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"mainContainer\");\nTemplate[\"mainContainer\"] = new Template(\"Template.mainContainer\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"app\"\n  }, \"\\n    \", HTML.HEADER(\"\\n      \", HTML.DIV({\n    class: \"app-bar\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"app-header\"\n  }, \"\\n          \", HTML.H1(\"üìùÔ∏è To Do List \", Blaze.View(\"lookup:incompleteCount\", function() {\n    return Spacebars.mustache(view.lookup(\"incompleteCount\"));\n  })), \"\\n        \"), \"\\n      \"), \"\\n    \"), \"\\n\\n    \", HTML.DIV({\n    class: \"main\"\n  }, \"\\n      \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isUserLogged\"));\n  }, function() {\n    return [ \"\\n      \", HTML.DIV({\n      class: \"user\"\n    }, Blaze.View(\"lookup:getUser.username\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"getUser\"), \"username\"));\n    }), \" üö™\"), \"\\n      \", Spacebars.include(view.lookupTemplate(\"form\")), \"\\n\\n      \", HTML.DIV({\n      class: \"filter\"\n    }, \"\\n        \", HTML.BUTTON({\n      id: \"hide-completed-button\"\n    }, \"\\n          \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"hideCompleted\"));\n    }, function() {\n      return \" Show All \";\n    }, function() {\n      return \" Hide Completed \";\n    }), \"\\n        \"), \"\\n      \"), \"\\n\\n      \", HTML.UL({\n      class: \"tasks\"\n    }, \"\\n        \", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"tasks\"));\n    }, function() {\n      return [ \" \", Spacebars.include(view.lookupTemplate(\"task\")), \" \" ];\n    }), \"\\n      \"), \"\\n      \" ];\n  }, function() {\n    return [ \" \", Spacebars.include(view.lookupTemplate(\"login\")), \" \" ];\n  }), \"\\n    \"), \"\\n  \");\n}));\n\nTemplate.__checkName(\"form\");\nTemplate[\"form\"] = new Template(\"Template.form\", (function() {\n  var view = this;\n  return HTML.Raw('<form class=\"task-form\">\\n    <input type=\"text\" name=\"text\" placeholder=\"Type to add new tasks\">\\n    <button type=\"submit\">Add Task</button>\\n  </form>');\n}));\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Login.html\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                   //\n// imports/ui/Login.html                                                                             //\n//                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                     //\nmodule.link(\"./template.Login.js\", { \"*\": \"*+\" });\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.Login.js\":function module(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                   //\n// imports/ui/template.Login.js                                                                      //\n//                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                     //\n\nTemplate.__checkName(\"login\");\nTemplate[\"login\"] = new Template(\"Template.login\", (function() {\n  var view = this;\n  return HTML.Raw('<form class=\"login-form\">\\n        <div>\\n            <label htmlfor=\"username\">Username</label>\\n\\n            <input type=\"text\" placeholder=\"Username\" name=\"username\" required=\"\">\\n        </div>\\n\\n        <div>\\n            <label htmlfor=\"password\">Password</label>\\n\\n            <input type=\"password\" placeholder=\"Password\" name=\"password\" required=\"\">\\n        </div>\\n        <div>\\n            <button type=\"submit\">Log In</button>\\n        </div>\\n    </form>');\n}));\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Task.html\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                   //\n// imports/ui/Task.html                                                                              //\n//                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                     //\nmodule.link(\"./template.Task.js\", { \"*\": \"*+\" });\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.Task.js\":function module(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                   //\n// imports/ui/template.Task.js                                                                       //\n//                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                     //\n\nTemplate.__checkName(\"task\");\nTemplate[\"task\"] = new Template(\"Template.task\", (function() {\n  var view = this;\n  return HTML.LI(\"\\n        \", HTML.INPUT({\n    type: \"checkbox\",\n    checked: function() {\n      return Spacebars.mustache(view.lookup(\"isChecked\"));\n    },\n    class: \"toggle-checked\"\n  }), \"\\n        \", HTML.SPAN(Blaze.View(\"lookup:text\", function() {\n    return Spacebars.mustache(view.lookup(\"text\"));\n  })), HTML.Raw('\\n        <button class=\"delete\">&times;</button>\\n    '));\n}));\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"App.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                   //\n// imports/ui/App.js                                                                                 //\n//                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                     //\nvar _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Template;\nmodule.link(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 1);\nvar TasksCollection;\nmodule.link(\"../api/TasksCollection\", {\n  TasksCollection: function (v) {\n    TasksCollection = v;\n  }\n}, 2);\nvar ReactiveDict;\nmodule.link(\"meteor/reactive-dict\", {\n  ReactiveDict: function (v) {\n    ReactiveDict = v;\n  }\n}, 3);\nmodule.link(\"./App.html\");\nmodule.link(\"./Task.js\");\nmodule.link(\"./Login.js\");\nvar HIDE_COMPLETED_STRING = \"hideCompleted\";\n\nvar getUser = function () {\n  return Meteor.user();\n};\n\nvar isUserLogged = function () {\n  return !!getUser();\n};\n\nvar getTasksFilter = function () {\n  var user = getUser();\n  var hideCompletedFilter = {\n    isChecked: {\n      $ne: true\n    }\n  };\n  var userFilter = user ? {\n    userId: user._id\n  } : {};\n\n  var pendingOnlyFilter = _objectSpread(_objectSpread({}, hideCompletedFilter), userFilter);\n\n  return {\n    userFilter: userFilter,\n    pendingOnlyFilter: pendingOnlyFilter\n  };\n};\n\nTemplate.mainContainer.onCreated(function () {\n  function mainContainerOnCreated() {\n    this.state = new ReactiveDict();\n  }\n\n  return mainContainerOnCreated;\n}());\nTemplate.mainContainer.events({\n  \"click #hide-completed-button\": function (event, instance) {\n    var currentHideCompleted = instance.state.get(HIDE_COMPLETED_STRING);\n    instance.state.set(HIDE_COMPLETED_STRING, !currentHideCompleted);\n  },\n  \"click .user\": function () {\n    Meteor.logout();\n  }\n});\nTemplate.mainContainer.helpers({\n  tasks: function () {\n    var instance = Template.instance();\n    var hideCompleted = instance.state.get(HIDE_COMPLETED_STRING);\n\n    var _getTasksFilter = getTasksFilter(),\n        pendingOnlyFilter = _getTasksFilter.pendingOnlyFilter,\n        userFilter = _getTasksFilter.userFilter;\n\n    if (!isUserLogged()) {\n      return [];\n    }\n\n    return TasksCollection.find(hideCompleted ? pendingOnlyFilter : userFilter, {\n      sort: {\n        createdAt: -1\n      }\n    }).fetch();\n  },\n  hideCompleted: function () {\n    return Template.instance().state.get(HIDE_COMPLETED_STRING);\n  },\n  incompleteCount: function () {\n    if (!isUserLogged()) {\n      return \"\";\n    }\n\n    var _getTasksFilter2 = getTasksFilter(),\n        pendingOnlyFilter = _getTasksFilter2.pendingOnlyFilter;\n\n    var incompleteTasksCount = TasksCollection.find(pendingOnlyFilter).count();\n    return incompleteTasksCount ? \"(\" + incompleteTasksCount + \")\" : \"\";\n  },\n  isUserLogged: function () {\n    return isUserLogged();\n  },\n  getUser: function () {\n    return getUser();\n  }\n});\nTemplate.form.events({\n  \"submit .task-form\": function (event) {\n    // Prevent default browser form submit\n    event.preventDefault(); // Get value from form element\n\n    var target = event.target;\n    var text = target.text.value; // Insert a task into the collection\n\n    Meteor.call(\"tasks.insert\", text); // Clear form\n\n    target.text.value = \"\";\n  }\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Login.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                   //\n// imports/ui/Login.js                                                                               //\n//                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                     //\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Template;\nmodule.link(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 1);\nmodule.link(\"./Login.html\");\nTemplate.login.events({\n  \"submit .login-form\": function (event) {\n    event.preventDefault();\n    var target = event.target;\n    var username = target.username.value;\n    var password = target.password.value;\n    Meteor.loginWithPassword(username, password);\n  }\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Task.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                   //\n// imports/ui/Task.js                                                                                //\n//                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                     //\nvar Template;\nmodule.link(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 0);\nvar TasksCollection;\nmodule.link(\"../api/TasksCollection\", {\n  TasksCollection: function (v) {\n    TasksCollection = v;\n  }\n}, 1);\nmodule.link(\"./Task.html\");\nTemplate.task.events({\n  \"click .toggle-checked\": function () {\n    // Set the checked property to the opposite of its current value\n    TasksCollection.update(this._id, {\n      $set: {\n        isChecked: !this.isChecked\n      }\n    });\n  },\n  \"click .delete\": function () {\n    TasksCollection.remove(this._id);\n  }\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"api\":{\"TasksCollection.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                   //\n// imports/api/TasksCollection.js                                                                    //\n//                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                     //\nmodule.export({TasksCollection:function(){return TasksCollection}},true);var Mongo;module.link(\"meteor/mongo\",{Mongo:function(v){Mongo=v}},0);\r\n\r\nconst TasksCollection = new Mongo.Collection(\"tasks\");\r\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"client\":{\"main.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                   //\n// client/main.js                                                                                    //\n//                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                     //\nmodule.link(\"../imports/ui/App.js\");\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".scss\"\n  ]\n});\n\nvar exports = require(\"/client/main.js\");","hash":"98b91a3243ef5ff6785d2e57976f12eb5376ea06","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/ui/App.js","imports/ui/Login.js","imports/ui/Task.js","client/main.js"],"names":["_objectSpread","module","link","default","v","Meteor","Template","TasksCollection","ReactiveDict","HIDE_COMPLETED_STRING","getUser","user","isUserLogged","getTasksFilter","hideCompletedFilter","isChecked","$ne","userFilter","userId","_id","pendingOnlyFilter","mainContainer","onCreated","mainContainerOnCreated","state","events","event","instance","currentHideCompleted","get","set","logout","helpers","tasks","hideCompleted","find","sort","createdAt","fetch","incompleteCount","incompleteTasksCount","count","form","preventDefault","target","text","value","call","login","username","password","loginWithPassword","task","update","$set","remove"],"mappings":"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","file":"/app.js","sourcesContent":["import { Meteor } from \"meteor/meteor\";\r\nimport { Template } from \"meteor/templating\";\r\nimport { TasksCollection } from \"../api/TasksCollection\";\r\nimport { ReactiveDict } from \"meteor/reactive-dict\";\r\nimport \"./App.html\";\r\nimport \"./Task.js\";\r\nimport \"./Login.js\";\r\n\r\nconst HIDE_COMPLETED_STRING = \"hideCompleted\";\r\n\r\nconst getUser = () => Meteor.user();\r\nconst isUserLogged = () => !!getUser();\r\n\r\nconst getTasksFilter = () => {\r\n  const user = getUser();\r\n\r\n  const hideCompletedFilter = { isChecked: { $ne: true } };\r\n\r\n  const userFilter = user ? { userId: user._id } : {};\r\n\r\n  const pendingOnlyFilter = { ...hideCompletedFilter, ...userFilter };\r\n\r\n  return { userFilter, pendingOnlyFilter };\r\n};\r\n\r\nTemplate.mainContainer.onCreated(function mainContainerOnCreated() {\r\n  this.state = new ReactiveDict();\r\n});\r\n\r\nTemplate.mainContainer.events({\r\n  \"click #hide-completed-button\"(event, instance) {\r\n    const currentHideCompleted = instance.state.get(HIDE_COMPLETED_STRING);\r\n    instance.state.set(HIDE_COMPLETED_STRING, !currentHideCompleted);\r\n  },\r\n  \"click .user\"() {\r\n    Meteor.logout();\r\n  },\r\n});\r\n\r\nTemplate.mainContainer.helpers({\r\n  tasks() {\r\n    const instance = Template.instance();\r\n    const hideCompleted = instance.state.get(HIDE_COMPLETED_STRING);\r\n\r\n    const { pendingOnlyFilter, userFilter } = getTasksFilter();\r\n\r\n    if (!isUserLogged()) {\r\n      return [];\r\n    }\r\n\r\n    return TasksCollection.find(\r\n      hideCompleted ? pendingOnlyFilter : userFilter,\r\n      {\r\n        sort: { createdAt: -1 },\r\n      }\r\n    ).fetch();\r\n  },\r\n  hideCompleted() {\r\n    return Template.instance().state.get(HIDE_COMPLETED_STRING);\r\n  },\r\n  incompleteCount() {\r\n    if (!isUserLogged()) {\r\n      return \"\";\r\n    }\r\n\r\n    const { pendingOnlyFilter } = getTasksFilter();\r\n\r\n    const incompleteTasksCount =\r\n      TasksCollection.find(pendingOnlyFilter).count();\r\n    return incompleteTasksCount ? `(${incompleteTasksCount})` : \"\";\r\n  },\r\n  isUserLogged() {\r\n    return isUserLogged();\r\n  },\r\n  getUser() {\r\n    return getUser();\r\n  },\r\n});\r\n\r\nTemplate.form.events({\r\n  \"submit .task-form\"(event) {\r\n    // Prevent default browser form submit\r\n    event.preventDefault();\r\n\r\n    // Get value from form element\r\n    const target = event.target;\r\n    const text = target.text.value;\r\n\r\n    // Insert a task into the collection\r\n    Meteor.call(\"tasks.insert\", text);\r\n\r\n    // Clear form\r\n    target.text.value = \"\";\r\n  },\r\n});\r\n","import { Meteor } from \"meteor/meteor\";\r\nimport { Template } from \"meteor/templating\";\r\nimport \"./Login.html\";\r\n\r\nTemplate.login.events({\r\n  \"submit .login-form\"(event) {\r\n    event.preventDefault();\r\n\r\n    const { target } = event;\r\n\r\n    const username = target.username.value;\r\n    const password = target.password.value;\r\n\r\n    Meteor.loginWithPassword(username, password);\r\n  },\r\n});\r\n","import { Template } from \"meteor/templating\";\r\n\r\nimport { TasksCollection } from \"../api/TasksCollection\";\r\n\r\nimport \"./Task.html\";\r\n\r\nTemplate.task.events({\r\n  \"click .toggle-checked\"() {\r\n    // Set the checked property to the opposite of its current value\r\n    TasksCollection.update(this._id, {\r\n      $set: { isChecked: !this.isChecked },\r\n    });\r\n  },\r\n  \"click .delete\"() {\r\n    TasksCollection.remove(this._id);\r\n  },\r\n});\r\n","import \"../imports/ui/App.js\";\n"]}}]