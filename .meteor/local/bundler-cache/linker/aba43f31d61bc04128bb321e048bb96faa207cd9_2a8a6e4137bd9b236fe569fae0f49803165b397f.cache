[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDevErrorOverlay = Package['dev-error-overlay'].DevErrorOverlay;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"ui\":{\"App.html\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/ui/App.html                                                                                         //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.link(\"./template.App.js\", { \"*\": \"*+\" });\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.App.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/ui/template.App.js                                                                                  //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n\n(function () {\n  var renderFunc = (function() {\n  var view = this;\n  return Spacebars.include(view.lookupTemplate(\"mainContainer\"));\n});\n  Template.body.addContent(renderFunc);\n  Meteor.startup(Template.body.renderToDocument);\n  if (typeof module === \"object\" && module.hot) {\n    module.hot.accept();\n    module.hot.dispose(function () {\n      var index = Template.body.contentRenderFuncs.indexOf(renderFunc)\n      Template.body.contentRenderFuncs.splice(index, 1);\n      Template._applyHmrChanges();\n    });\n  }\n})();\n\nTemplate._migrateTemplate(\n  \"mainContainer\",\n  new Template(\"Template.mainContainer\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"app\"\n  }, HTML.Raw('\\n        <header>\\n            <div class=\"app-bar\">\\n                <div class=\"app-header\">\\n                    <h1>üìùÔ∏è To Do List</h1>\\n                </div>\\n            </div>\\n        </header>\\n\\n        '), HTML.DIV({\n    class: \"main\"\n  }, \"\\n            \", Spacebars.include(view.lookupTemplate(\"form\")), \"\\n\\n            \", HTML.UL({\n    class: \"tasks\"\n  }, \"\\n                \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"tasks\"));\n  }, function() {\n    return [ \"\\n                    \", Spacebars.include(view.lookupTemplate(\"task\")), \"\\n                \" ];\n  }), \"\\n            \"), \"\\n        \"), \"\\n    \");\n})),\n);\nif (typeof module === \"object\" && module.hot) {\n  module.hot.accept();\n  module.hot.dispose(function () {\n    Template.__pendingReplacement.push(\"mainContainer\");\n    Template._applyHmrChanges(\"mainContainer\");\n  });\n}\n\nTemplate._migrateTemplate(\n  \"form\",\n  new Template(\"Template.form\", (function() {\n  var view = this;\n  return HTML.Raw('<form class=\"task-form\">\\n        <input type=\"text\" name=\"text\" placeholder=\"Type to add new tasks\">\\n        <button type=\"submit\">Add Task</button>\\n    </form>');\n})),\n);\nif (typeof module === \"object\" && module.hot) {\n  module.hot.accept();\n  module.hot.dispose(function () {\n    Template.__pendingReplacement.push(\"form\");\n    Template._applyHmrChanges(\"form\");\n  });\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Task.html\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/ui/Task.html                                                                                        //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.link(\"./template.Task.js\", { \"*\": \"*+\" });\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.Task.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/ui/template.Task.js                                                                                 //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n\nTemplate._migrateTemplate(\n  \"task\",\n  new Template(\"Template.task\", (function() {\n  var view = this;\n  return HTML.LI(\"\\n        \", HTML.INPUT({\n    type: \"checkbox\",\n    checked: function() {\n      return Spacebars.mustache(view.lookup(\"isChecked\"));\n    },\n    class: \"toggle-checked\"\n  }), \"\\n        \", HTML.SPAN(Blaze.View(\"lookup:text\", function() {\n    return Spacebars.mustache(view.lookup(\"text\"));\n  })), HTML.Raw('\\n        <button class=\"delete\">&times;</button>\\n    '));\n})),\n);\nif (typeof module === \"object\" && module.hot) {\n  module.hot.accept();\n  module.hot.dispose(function () {\n    Template.__pendingReplacement.push(\"task\");\n    Template._applyHmrChanges(\"task\");\n  });\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"App.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/ui/App.js                                                                                           //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet Template;\nmodule.link(\"meteor/templating\", {\n  Template(v) {\n    Template = v;\n  }\n\n}, 0);\nlet TasksCollection;\nmodule.link(\"../api/TasksCollection\", {\n  TasksCollection(v) {\n    TasksCollection = v;\n  }\n\n}, 1);\nmodule.link(\"./App.html\");\nmodule.link(\"./Task.js\");\nTemplate.mainContainer.helpers({\n  tasks() {\n    return TasksCollection.find({}, {\n      sort: {\n        createdAt: -1\n      }\n    });\n  }\n\n});\nTemplate.form.events({\n  \"submit .task-form\"(event) {\n    // Prevent default browser form submit\n    event.preventDefault(); // Get value from form element\n\n    const target = event.target;\n    const text = target.text.value; // Insert a task into the collection\n\n    TasksCollection.insert({\n      text,\n      createdAt: new Date() // current time\n\n    }); // Clear form\n\n    target.text.value = \"\";\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Task.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/ui/Task.js                                                                                          //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nlet Template;\nmodule.link(\"meteor/templating\", {\n  Template(v) {\n    Template = v;\n  }\n\n}, 0);\nlet TasksCollection;\nmodule.link(\"../api/TasksCollection\", {\n  TasksCollection(v) {\n    TasksCollection = v;\n  }\n\n}, 1);\nmodule.link(\"./Task.html\");\nTemplate.task.events({\n  \"click .toggle-checked\"() {\n    // Set the checked property to the opposite of its current value\n    TasksCollection.update(this._id, {\n      $set: {\n        isChecked: !this.isChecked\n      }\n    });\n  },\n\n  \"click .delete\"() {\n    TasksCollection.remove(this._id);\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"api\":{\"TasksCollection.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// imports/api/TasksCollection.js                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.export({\n  TasksCollection: () => TasksCollection\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nconst TasksCollection = new Mongo.Collection(\"tasks\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"client\":{\"main.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// client/main.js                                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nmodule.link(\"../imports/ui/App.js\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\n\nvar exports = require(\"/client/main.js\");","hash":"a52f4699a3460de189c318294d1e095988d098af","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/ui/App.js","imports/ui/Task.js","imports/api/TasksCollection.js","client/main.js"],"names":["Template","tasks","sort","createdAt","event","target","text","TasksCollection","$set","isChecked","Mongo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKAA,QAAQ,CAARA,sBAA+B;AAC7BC,OAAK,GAAG;AACN,WAAO,eAAe,CAAf,SAAyB;AAAEC,UAAI,EAAE;AAAEC,iBAAS,EAAE,CAAC;AAAd;AAAR,KAAzB,CAAP;AACD;;AAH4B,CAA/BH;AAMAA,QAAQ,CAARA,YAAqB;AACnB,6BAA2B;AACzB;AACAI,SAAK,CAFoB,cAEzBA,GAFyB,CAIzB;;AACA,UAAMC,MAAM,GAAGD,KAAK,CAApB;AACA,UAAME,IAAI,GAAGD,MAAM,CAANA,KANY,KAMzB,CANyB,CAQzB;;AACAE,mBAAe,CAAfA,OAAuB;AAAA;AAErBJ,eAAS,EAAE,IAFU,IAEV,EAFU,CAEE;;AAFF,KAAvBI,EATyB,CAczB;;AACAF,UAAM,CAANA;AACD;;AAjBkB,CAArBL,E;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAMAA,QAAQ,CAARA,YAAqB;AACnB,4BAA0B;AACxB;AACAO,mBAAe,CAAfA,OAAuB,KAAvBA,KAAiC;AAC/BC,UAAI,EAAE;AAAEC,iBAAS,EAAE,CAAC,KAAKA;AAAnB;AADyB,KAAjCF;AAHiB;;AAOnB,oBAAkB;AAChBA,mBAAe,CAAfA,OAAuB,KAAvBA;AACD;;AATkB,CAArBP,E;;;;;;;;;;;ACNA;AAAA,iBAAsB,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEO,MAAMO,eAAe,GAAG,IAAIG,KAAK,CAAT,WAAxB,OAAwB,CAAxB,C;;;;;;;;;;;ACFP,OAAO,IAAP,yB","file":"/app.js","sourcesContent":["import { Template } from \"meteor/templating\";\r\nimport { TasksCollection } from \"../api/TasksCollection\";\r\nimport \"./App.html\";\r\nimport \"./Task.js\";\r\n\r\nTemplate.mainContainer.helpers({\r\n  tasks() {\r\n    return TasksCollection.find({}, { sort: { createdAt: -1 } });\r\n  },\r\n});\r\n\r\nTemplate.form.events({\r\n  \"submit .task-form\"(event) {\r\n    // Prevent default browser form submit\r\n    event.preventDefault();\r\n\r\n    // Get value from form element\r\n    const target = event.target;\r\n    const text = target.text.value;\r\n\r\n    // Insert a task into the collection\r\n    TasksCollection.insert({\r\n      text,\r\n      createdAt: new Date(), // current time\r\n    });\r\n\r\n    // Clear form\r\n    target.text.value = \"\";\r\n  },\r\n});\r\n","import { Template } from \"meteor/templating\";\r\n\r\nimport { TasksCollection } from \"../api/TasksCollection\";\r\n\r\nimport \"./Task.html\";\r\n\r\nTemplate.task.events({\r\n  \"click .toggle-checked\"() {\r\n    // Set the checked property to the opposite of its current value\r\n    TasksCollection.update(this._id, {\r\n      $set: { isChecked: !this.isChecked },\r\n    });\r\n  },\r\n  \"click .delete\"() {\r\n    TasksCollection.remove(this._id);\r\n  },\r\n});\r\n","import { Mongo } from \"meteor/mongo\";\r\n\r\nexport const TasksCollection = new Mongo.Collection(\"tasks\");\r\n","import \"../imports/ui/App.js\";\n"]}}]